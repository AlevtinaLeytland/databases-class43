1. 
Give an example of a value that can be passed as name and code that
would take advantage of SQL-injection and ( fetch all the records in the database)
const name = "'; DROP TABLE Countries; --";
const code = "'; DROP TABLE Countries; --";

// or like this:

const name1 = "' OR '1'='1";
const code1 = "' OR '1'='1";

//query will look like this:

SELECT Population FROM ${Country} WHERE Name = '' OR '1'='1' AND code = '' OR '1'='1';

2.     Rewrite the function so that it is no longer vulnerable to SQL injection

function getPopulation(Country, name, code, cb) {
// assuming that connection to the database is established and stored as conn
conn.query(
`SELECT Population FROM ${Country} WHERE Name = ? and code = ?`,
[name, code],
function (err, result) {
if (err) cb(err);
if (result.length == 0) cb(new Error("Not found"));
cb(null, result[0].name);
},
);
}
